name: Dependabot Auto Merge
on: pull_request

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    name: Auto merge
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      # Fetch the Dependabot metadata
      - name: Download Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Check the semantic version update type
      - name: Check for auto merge
        id: check-auto-merge
        run: |
          echo "Version update type: ${{ steps.metadata.outputs.update-type }}"
          if [[ "${{ steps.metadata.outputs.update-type }}" =~ version-update:semver-(minor|patch) ]]; then
            echo "approve_and_merge=true" >> "$GITHUB_OUTPUT"
            echo "Will auto-approve & enable auto-merge"
          else
            echo "approve_and_merge=false" >> "$GITHUB_OUTPUT"
            echo "Skipping auto-merge (not patch/minor)"
          fi

      # Approve the pull request
      - name: Approve pull request
        if: steps.check-auto-merge.outputs.approve_and_merge == 'true'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Set the PR to auto merge
      - name: Set auto merge
        if: steps.check-auto-merge.outputs.approve_and_merge == 'true'
        run: gh pr merge "$PR_URL" --squash --auto
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
